name: home

services:
  #----------------------------------------------------------------------------
  # Infrastructure Services
  #----------------------------------------------------------------------------
  duplicati:
    image: linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=0
      - PGID=0
      - TZ=${TZ}
      - SETTINGS_ENCRYPTION_KEY=${DUPLICATI_SETTINGS_ENCRYPTION_KEY}
    labels:
      - com.centurylinklabs.watchtower.enable=false
    ports:
      - 8200:8200
    volumes:
      - ${APPDATA_PATH}/duplicati:/config
      - ${BACKUP_PATH}/duplicati:/backups
      - ${APPDATA_PATH}:/source
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}
    restart: unless-stopped

  vpn:
    image: linuxserver/wireguard:latest
    container_name: vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
    volumes:
      - ${APPDATA_PATH}/vpn:/config
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      default:
        aliases:
          - torrent
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_POLL_INTERVAL=3600
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    environment:
      - TZ=${TZ}
    ports:
      - 3001:3001
    volumes:
      - ${APPDATA_PATH}/uptime-kuma:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  #----------------------------------------------------------------------------
  # Media Services
  #----------------------------------------------------------------------------
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLISHED_SERVER_URL}
    ports:
      - 8096:8096
      - 8920:8920
      - 7359:7359/udp
      - 1900:1900/udp
    volumes:
      - ${APPDATA_PATH}/jellyfin:/config
      - ${MEDIA_PATH}:/media
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
    volumes:
      - ${APPDATA_PATH}/radarr:/config
      - ${MEDIA_PATH}:/media
    depends_on:
      - prowlarr
      - qbittorrent
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
    volumes:
      - ${APPDATA_PATH}/sonarr:/config
      - ${MEDIA_PATH}:/media
    depends_on:
      - prowlarr
      - qbittorrent
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
    volumes:
      - ${APPDATA_PATH}/bazarr:/config
      - ${MEDIA_PATH}:/media
    depends_on:
      - radarr
      - sonarr
    restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
    volumes:
      - ${APPDATA_PATH}/prowlarr:/config
    depends_on:
      - flaresolverr
    restart: unless-stopped

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:latest
    container_name: recyclarr
    user: 568:568
    environment:
      - TZ=${TZ}
    volumes:
      - ${APPDATA_PATH}/recyclarr:/config
    depends_on:
      - radarr
      - sonarr
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ${APPDATA_PATH}/qbittorrent:/config
      - ${MEDIA_PATH}:/media
    network_mode: service:vpn
    depends_on:
      - vpn
    restart: unless-stopped

  unpackerr:
    image: golift/unpackerr:latest
    container_name: unpackerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=${UN_SONARR_0_API_KEY}
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${UN_RADARR_0_API_KEY}
    volumes:
      - ${MEDIA_PATH}:/media
    depends_on:
      - radarr
      - sonarr
      - qbittorrent
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - TZ=${TZ}
    restart: unless-stopped

  #----------------------------------------------------------------------------
  # Other Services
  #----------------------------------------------------------------------------
  nginx:
    image: nginx:latest
    container_name: nginx
    environment:
      - TZ=${TZ}
    volumes:
      - ${WEB_PATH}:/usr/share/nginx/html:ro
    restart: unless-stopped

  echo:
    image: ealen/echo-server:latest
    container_name: echo
    environment:
      - TZ=${TZ}
      - LOGS__IGNORE__PING=true
    restart: unless-stopped

  # murailobot:
  #   image: ghcr.io/edgard/murailobot:latest
  #   container_name: murailobot
  #   environment:
  #     - TZ=${ALT_TZ}
  #   volumes:
  #     - ${APPDATA_PATH}/murailobot/config.yaml:/app/config.yaml
  #     - ${APPDATA_PATH}/murailobot/storage.db:/app/storage.db
  #   restart: unless-stopped

  #----------------------------------------------------------------------------
  # 3D Printing Services
  #----------------------------------------------------------------------------
  klipper:
    image: mkuf/klipper:latest
    container_name: klipper
    command: >
      -I printer_data/run/klipper.tty
      -a printer_data/run/klipper.sock
      printer_data/config/printer.cfg
      -l printer_data/logs/klippy.log
    environment:
      - TZ=${TZ}
    labels:
      - com.centurylinklabs.watchtower.enable=false
    volumes:
      - /dev:/dev  # mount host /dev so the container can see the port once it appears
      - ${APPDATA_PATH}/klipper/config:/opt/printer_data/config
      - ${APPDATA_PATH}/klipper/run:/opt/printer_data/run
      - ${APPDATA_PATH}/klipper/gcodes:/opt/printer_data/gcodes
      - ${APPDATA_PATH}/klipper/logs:/opt/printer_data/logs
    privileged: true  # grant access to hot-plugged printer device
    restart: unless-stopped

  moonraker:
    image: mkuf/moonraker:latest
    container_name: moonraker
    environment:
      - TZ=${TZ}
    labels:
      - com.centurylinklabs.watchtower.enable=false
    ports:
      - 7125:7125
    volumes:
      - /dev/null:/opt/klipper/config/null
      - /dev/null:/opt/klipper/docs/null
      - ${APPDATA_PATH}/klipper/config:/opt/printer_data/config
      - ${APPDATA_PATH}/klipper/run:/opt/printer_data/run
      - ${APPDATA_PATH}/klipper/gcodes:/opt/printer_data/gcodes
      - ${APPDATA_PATH}/klipper/logs:/opt/printer_data/logs
      - ${APPDATA_PATH}/moonraker/database:/opt/printer_data/database
    depends_on:
      - klipper
    restart: unless-stopped

  mainsail:
    image: ghcr.io/mainsail-crew/mainsail:latest
    container_name: mainsail
    environment:
      - TZ=${TZ}
    labels:
      - com.centurylinklabs.watchtower.enable=false
    ports:
      - 8010:80
    volumes:
      - ${APPDATA_PATH}/mainsail/config.json:/usr/share/nginx/html/config.json:ro
    depends_on:
      - moonraker
    restart: unless-stopped

networks:
  default:
    driver: bridge
