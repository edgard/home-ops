apiVersion: apps/v1
kind: Deployment
metadata:
  name: bdocodesbot
  annotations:
    configmap.reloader.stakater.com/reload: "bdocodesbot-config"
    secret.reloader.stakater.com/reload: "bdocodesbot-secret"
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: bdocodesbot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bdocodesbot
    spec:
      initContainers:
      - name: init-config
        image: dibi/envsubst:latest
        env:
        - name: AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: bdocodesbot-secret
              key: auth_token
        volumeMounts:
        - name: config-volume
          mountPath: /processed
        - name: workdir-volume
          mountPath: /workdir
      containers:
      - name: bdocodesbot
        image: ghcr.io/edgard/bdocodesbot:0.0.1 # {"$imagepolicy": "flux-system:bdocodesbot"}
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.yml
          subPath: config.yml
        - name: data-volume
          mountPath: /app/storage.db
          subPath: storage.db
      volumes:
      - name: workdir-volume
        configMap:
          name: bdocodesbot-config
      - name: config-volume
        emptyDir: {}
      - name: data-volume
        persistentVolumeClaim:
          claimName: bdocodesbot-data
      imagePullSecrets:
      - name: ghcr-secrets
